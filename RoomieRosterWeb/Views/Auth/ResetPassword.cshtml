@model RoomieRosterWeb.Models.ResetPasswordDto
@{
    Layout = "/Views/Shared/_AuthLayout.cshtml";
    var errors = ViewData.ModelState.Values.SelectMany(v => v.Errors);
}



<div class="container my-auto">
    @if (errors.Any())
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }



    @if (ViewBag.IsSuccess == true)
    {
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card bg-custom-1">
                    <div class="card-body d-flex flex-column">
                        <div class="rounded-circle text-center align-self-center">
                            <span class="bi bi-key-fill custom-login-icon"></span>
                        </div>
                        <h1 class="card-title text-center text-light mt-4 mb-4">Parola yenileme işlemi başarıyla tamamlandı.</h1>
                        <p class="text-light text-center mt-1 mb-3">Kısa süre içerisinde yönlendirileceksiniz.</p>
                    </div>
                </div>
            </div>
        </div>


        <script>setTimeout(() => {
                window.location.replace("/Home/Index")
            }, 3000);</script>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body d-flex flex-column">
                        <div class="custom-login-icon-container rounded-circle text-center align-self-center">
                            <span class="bi bi-lock custom-login-icon"></span>
                        </div>
                        <h1 class="card-title text-center mt-4 mb-4">Parolamı Yenile</h1>

                        <form asp-action="ResetPassword" id="resetpassword" asp-controller="Auth" method="post" novalidate>
                            <div class="form-group ms-4">
                                <input asp-for="Password" type="password" name="password" class="form-control" id="password" required>
                                <label asp-for="Password" class="control-label">Parola*</label>
                            </div>
                            <div class="form-group ms-4">
                                <input type="password" name="confirmPassword" autocomplete="off" class="form-control" id="confirmPassword" required>
                                <label for="confirmPassword" class="control-label">Parola Tekrarı*</label>
                            </div>
                            <div class="form-group ms-4">
                                <input asp-for="UserId" type="hidden" class="form-control" value="@ViewBag.UserId" id="userId" required>
                            </div>
                            <div class="form-group ms-4">
                                <input asp-for="Token" type="hidden" class="form-control" value="@ViewBag.Token" id="token" required>
                            </div>
                            <div class="form-group ms-4">
                                <button type="submit" class="btn btn-primary w-100 custom-blue-button">Parolamı Yenile</button>
                                <div class="text-end mt-4">
                                    <a href="/Auth/Login" class="text-secondary">Giriş Yapmak İçin Tıklayınız</a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script>window.addEventListener("DOMContentLoaded", () => {
                if (window.location.href.indexOf('user=') !== -1) {
                    document.getElementById("userId").value = window.location.href.split('user=').slice(-1)[0].split('&')[0]
                    document.getElementById("token").value = window.location.href.split('token=').slice(-1)[0].split('&')[0]
                }

                $.validator.addMethod("passwordMatch", function (value, element, params) {
                    var password = $("#password").val();

                    return password === value;
                    }, "Şifreler eşleşmiyor.");

                    $.validator.addMethod("strongPassword", function (value, element) {
                    if (value.length < 6) return false;

                    if (!/[A-Z]/.test(value)) return false;

                    if (!/[a-z]/.test(value)) return false;

                    if (!/\d/.test(value)) return false;

                    if (!/^[a-zA-Z0-9]+$/.test(value)) return false;
                    return true;
                    }, "Şifreniz en az 6 karakter uzunluğunda olmalı ve en az bir büyük harf, bir küçük harf ve bir rakam içermelidir.");



    $('#resetpassword').validate({
        errorElement: "div",
        errorPlacement: function (error, element) {
            error.addClass("invalid-feedback");
            error.insertAfter(element);
        },
        highlight: function (element, errorClass, validClass) {
            $(element).addClass("is-invalid").removeClass("is-valid");
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).addClass("is-valid").removeClass("is-invalid");
        },

        rules: {
            password: {
                required: true,
                strongPassword: true
            },
            confirmPassword: {
                required: true,
                passwordMatch: true,
                strongPassword: true
            }
        },
        messages: {
            password: {
                required: "Parola alanı boş bırakılamaz."
            },
            confirmPassword: {
                required: "Parola alanı boş bırakılamaz."
            }
        },
        submitHandler: function () {
            $('#resetpassword').submit();
        },
        showErrors: function () {
            $('.form-control.is-valid').each((key, element) => {
                $(element).siblings('label').css('bottom', '50px');
            });

            this.defaultShowErrors();

            $('.form-control.is-invalid').each((key, element) => {
                let labelHeight = ($(element).siblings('.invalid-feedback').height() || 0) + 50;

                if (labelHeight > 50) {
                    labelHeight += 10;
                }

                $(element).siblings('label').css('bottom', labelHeight + 'px');
            });
        }
    });
              
            });


    </script>
    }



    <p class="text-center mt-5">
        &copy; 2024 - RoomieRoster by <a href="https://www.digitson.com.tr" class="digitsonLink">
            <img src="~/img/db1.png" width="70" />
        </a>
    </p>
</div>


