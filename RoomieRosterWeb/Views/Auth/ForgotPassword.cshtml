@model RoomieRosterWeb.Models.ForgotPasswordDto
@{
    Layout = "/Views/Shared/_AuthLayout.cshtml";
    var errors = ViewData.ModelState.Values.SelectMany(v => v.Errors);
}



<div class="container my-auto">
    @if (errors.Any())
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    @if (ViewBag.IsSuccess == true)
    {
        <div class="alert alert-success">
            <ul>
              Parola yenileme bağlantısı e posta adresinize gönderildi. Bağlantıyı takip ederek parolanızı yenileyebilirsiniz.
            </ul>
        </div>
    }

    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body d-flex flex-column">
                    <div class="custom-login-icon-container rounded-circle text-center align-self-center">
                        <span class="bi bi-key-fill custom-login-icon"></span>
                    </div>
                    <h1 class="card-title text-center mt-4 mb-4">Parolamı Unuttum</h1>

                    <form asp-action="ForgotPassword" id="forgotpassword" asp-controller="Auth" method="post" novalidate>
                        <div class="form-group ms-4">
                            <input asp-for="Email" class="form-control" name="email" id="email" required>
                            <label asp-for="Email" class="control-label">E posta*</label>
                        </div>
                        <div class="form-group ms-4">
                            <button type="submit" class="btn btn-primary w-100 custom-blue-button">Parolamı Yenile</button>
                            <div class="text-end mt-4">
                                <a href="/Auth/Login" class="text-secondary">Giriş Yapmak İçin Tıklayınız</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <p class="text-center mt-5">
        &copy; 2024 - RoomieRoster by <a href="https://www.digitson.com.tr" class="digitsonLink">
            <img src="~/img/db1.png" width="70" />
        </a>
    </p>
</div>

<script>window.addEventListener('DOMContentLoaded', function () {
        $.validator.addMethod("customEmail", function (value, element) {
            return this.optional(element) || /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(value);
        }, "Lütfen geçerli bir e-posta adresi girin");

    $('#forgotpassword').validate({
            errorElement: "div",
            errorPlacement: function (error, element) {
                error.addClass("invalid-feedback");
                error.insertAfter(element);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass("is-invalid").removeClass("is-valid");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).addClass("is-valid").removeClass("is-invalid");
            },

            rules: {
                email: {
                    required: true,
                    customEmail: true,
                    email: false
                }
            },
            messages: {
                email: {
                    required: "E mail alanı boş bırakılamaz.",
                }
            },
            submitHandler: function () {
                $('#forgotpassword').submit();
            },
            showErrors: function () {
                $('.form-control.is-valid').each((key, element) => {
                    $(element).siblings('label').css('bottom', '50px');
                });

                this.defaultShowErrors();

                $('.form-control.is-invalid').each((key, element) => {
                    let labelHeight = ($(element).siblings('.invalid-feedback').height() || 0) + 50;

                    if (labelHeight > 50) {
                        labelHeight += 10;
                    }

                    $(element).siblings('label').css('bottom', labelHeight + 'px');
                });
            }
        });
    });
</script>